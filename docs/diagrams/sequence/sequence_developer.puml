@startuml sequence_developer

actor "AI Developer" as developer

participant "Azure authorization" as azureAuth
participant "Web API" as webAPI
database "job database" as jobDB
queue "Task queue" as taskQueue
participant "AI worker" as aiWorker
participant "Trivy scanner" as scanner
database "Minio object storage" as minioStorage

autonumber 0.0
group Authentication
developer ->> azureAuth: Request access token
activate azureAuth
azureAuth --> developer: Access token
deactivate azureAuth
end

autonumber inc A
group Submit Job
developer ->> webAPI: Submit job (model, dataset, datadefinition)
activate webAPI
webAPI -> jobDB: Store job-user details
webAPI -> minioStorage: Upload input files
webAPI -> taskQueue: Add training job to queue
deactivate webAPI
end

autonumber inc A
group Training Task Execution
taskQueue ->> aiWorker: Fetch training job if available
activate aiWorker
aiWorker -> minioStorage: Download input files
aiWorker -> aiWorker: Train model
aiWorker -> aiWorker: Generate CycloneDX AIBOM
aiWorker -> minioStorage: Upload output files (e.g., AIBOM, In-toto link, logs)
aiWorker --> taskQueue: Notify job completion
deactivate aiWorker
end

autonumber inc A
group Check Job Status
developer ->> webAPI: Check job status
activate webAPI
webAPI -> jobDB: Get job-user details
jobDB --> webAPI: Job-user details
webAPI -> taskQueue: Get job status
taskQueue --> webAPI: Job status
webAPI --> developer: Job status
deactivate webAPI
end

autonumber inc A
group Retrieve Artifacts
developer ->> webAPI: Retrieve artifact (AIBOM, In-toto link)
activate webAPI
webAPI -> jobDB: Get job-user details
jobDB --> webAPI: Job-user details
webAPI -> minioStorage: Download specified artifacts
minioStorage --> webAPI: Specified artifacts
webAPI --> developer: Specified artifacts
deactivate webAPI
end

autonumber inc A
group Periodic Scanning
loop every X hours
scanner -> taskQueue: Periodicly enqueue scan job
activate scanner
taskQueue --> scanner: Fetch scan job if available
scanner ->> aiWorker: Scan AIBOM
aiWorker --> scanner: Scan results
scanner -> minioStorage: Upload scan results
deactivate scanner
end loop
end

@enduml